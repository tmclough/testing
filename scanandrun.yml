name: Gitleaks Scan and clone

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:  # Allows manual runs
  pull_request:  # Triggers on pull requests
  push:  # Triggers on push events

jobs:
  gitleaks_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the current repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures the entire history is fetched for scanning

      - name: Download repository as tarball from GitHub
        run: |
          # Replace the URL with the actual repository URL
          curl -L https://github.com/tmclough/CS546/archive/refs/heads/main.tar.gz -o repo.tar.gz
          tar -xzvf repo.tar.gz
          cd CS546-main  # Change to the extracted directory (name should match the repo)

      - name: Run Gitleaks on the downloaded repository
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--source /home/runner/work/CS546/CS546 --report-format json --report-path gitleaks_report.json --since=10"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Required for pushing back to the repository
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # Only required for organizations (not personal repos)

      - name: Upload Gitleaks Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: gitleaks-report
          path: gitleaks_report.json
